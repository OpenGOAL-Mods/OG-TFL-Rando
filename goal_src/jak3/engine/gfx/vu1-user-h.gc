;;-*-Lisp-*-
(in-package goal)

;; name: vu1-user-h.gc
;; name in dgo: vu1-user-h
;; dgos: GAME

;; +++tpage-category
(defenum tpage-category
  :type int8
  )
;; ---tpage-category

;; +++bucket-id
(defenum bucket-id
  :type int32
  (debug-no-zbuf2 584)
  )
;; ---bucket-id

;; +++vu1-renderer-mask
;; TODO stolen from Jak 2
(defenum vu1-renderer-mask
  :type uint64
  :bitfield #t
  (rn0)
  (rn1)
  (rn2)
  (sky)
  (ocean)
  (ocean-wave)
  (tfrag)
  (tie)
  (tie-envmap)
  (tie-scissor)
  (tie-envmap-scissor)
  (tie-vanish)
  (generic)
  (merc)
  (emerc)
  (shrubbery)
  (shrub-near)
  (billboard)
  (shrubbery-vanish)
  (tfrag-trans)
  (tie-scissor-trans)
  (tie-trans)
  (tie-envmap-trans)
  (tie-envmap-scissor-trans)
  (tfrag-water)
  (tie-scissor-water)
  (tie-water)
  (tie-envmap-water)
  (tie-envmap-scissor-water)
  (sprite)
  (shadow)
  (rn31)
  (rn32)
  (rn33)
  (depth-cue)
  (rn35)
  (rn36)
  (rn37)
  )
;; ---vu1-renderer-mask

;; DECOMP BEGINS

(deftype dma-foreground-sink (basic)
  "A specification for where a foreground renderer should output its DMA data."
  ((bucket                    bucket-id)
   (foreground-texture-page   tpage-category)
   (foreground-texture-level  int8)
   (foreground-output-bucket  int8)
   )
  )


(deftype generic-bucket-state (structure)
  "The state of buffers for the generic renderer.
When generating generic DMA data, you must know the previous state
of the VU's memory to properly double-buffer the input and output data."
  ((gifbuf-adr  uint32)
   (inbuf-adr   uint32)
   )
  :pack-me
  )


(deftype generic-dma-foreground-sink (dma-foreground-sink)
  "A specification for where a foreground generic renderer should output DMA data,
and the state of the VU memory buffers at the end of the bucket."
  ((state  generic-bucket-state  :inline)
   )
  )
