;;-*-Lisp-*-
(in-package goal)

;; name: race-h.gc
;; name in dgo: race-h
;; dgos: WASLEAPR, DESRALLY, DESTRACK

;; +++racer-info-flag
(defenum racer-info-flag
  :type uint8
  :bitfield #t
  )
;; ---racer-info-flag


;; +++race-info-flag
(defenum race-info-flag
  :type uint8
  :bitfield #t
  )
;; ---race-info-flag


;; +++racer-state-flags
(defenum racer-state-flags
  :type uint8
  :bitfield #t
  )
;; ---racer-state-flags


;; +++race-state-enum
(defenum race-state-enum
  :type uint8
  )
;; ---race-state-enum


;; +++race-flag
(defenum race-flag
  :type uint8
  )
;; ---race-flag


;; +++race-mesh-flag
(defenum race-mesh-flag
  :type uint8
  :bitfield #t
  (rmf0 0)
  (rmf1 1)
  )
;; ---race-mesh-flag


;; DECOMP BEGINS

(deftype race-turbo-pad (structure)
  ((position  vector  :inline)
   (handle    handle)
   )
  )


(deftype race-decision-point (structure)
  ((pos            float)
   (decision-type  uint8)
   (shortcuts      uint8)
   (safe-paths     uint8)
   )
  )


(deftype race-racer-info (structure)
  ((rider        uint8)
   (vehicle      uint8)
   (flags        racer-info-flag)
   (seek-offset  int8)
   )
  )


(deftype race-info (basic)
  ((race-mesh-name            string)
   (path-group-name           string)
   (task-node                 uint16)
   (mesh                      race-mesh)
   (ai-min-speed-factor       float)
   (ai-max-speed-factor       float)
   (ai-spread-factor          float)
   (start-sphere              sphere  :inline)
   (start-dir                 vector  :inline)
   (finish-sphere             sphere  :inline)
   (finish-dir                vector  :inline)
   (player-intro-pos          vector  :inline)
   (flags                     racer-info-flag)
   (score                     uint8)
   (lap-count                 int8)
   (racer-count               int8)
   (turbo-pad-count           int8)
   (map-index                 int8)
   (decision-point-count      int8)
   (safe-paths                uint8)
   (turbo-pad-array           (inline-array race-turbo-pad))
   (racer-array               (inline-array race-racer-info))
   (decision-point-array      (inline-array race-decision-point))
   (level                     symbol)
   (borrow-level              symbol)
   (borrow                    pair)
   (manager                   handle)
   (manager-handle-init-hack  symbol  :overlay-at manager)
   (hatch-actor-name          string)
   (countdown-scene           string)
   (complete-continue         string)
   (start-camera              string)
   (go-speech                 uint16)
   )
  (:methods
    (race-info-method-9 () none)
    )
  )


(deftype racer-state (structure)
  ((position           vector  :inline)
   (racer              handle)
   (flags              racer-state-flags)
   (rank               int8)
   (finish-count       int8)
   (lap-count          int8)
   (lap-quadrant       int8)
   (rider              uint8)
   (lap-distance       float)
   (lap-distance-prev  float)
   (pos                float)
   (target-pos-offset  float)
   (speed-factor       float)
   (finish-time        uint32)
   (lap-start          uint32)
   (best-lap-time      uint32)
   (lap-time-array     float   5)
   (start-position     vector  :inline)
   )
  (:methods
    (racer-state-method-9 () none)
    (racer-state-method-10 () none)
    (racer-state-method-11 () none)
    (racer-state-method-12 () none)
    (racer-state-method-13 () none)
    )
  )


(deftype race-state (structure)
  ((info                  race-info)
   (flags                 race-flag)
   (state                 race-state-enum)
   (racer-count           int8)
   (finished-count        int8)
   (i-player              int8)
   (i-countdown           int8)
   (manager               handle)
   (scene-player          handle)
   (race-signal           handle)
   (arrow                 handle)
   (hud-timer             handle)
   (hud-lap-counter       handle)
   (hud-turbo-counter     handle)
   (hud-position          handle)
   (current-time          uint32)
   (countdown-start-time  uint32)
   (race-start-time       uint32)
   (rankings              int8         10)
   (target-pos            float)
   (suck-factor           float)
   (player-win?           symbol)
   (new-score?            symbol)
   (racer-array           racer-state  10 :inline)
   (player-intro-curve    cubic-curve  :inline)
   )
  (:methods
    (race-state-method-9 () none)
    (race-state-method-10 () none)
    (race-state-method-11 () none)
    (race-state-method-12 () none)
    (race-state-method-13 () none)
    (race-state-method-14 () none)
    (race-state-method-15 () none)
    (race-state-method-16 () none)
    (race-state-method-17 () none)
    (race-state-method-18 () none)
    (race-state-method-19 () none)
    (race-state-method-20 () none)
    )
  )


(deftype race-manager (process)
  ((race-state            race-state)
   (state-time            time-frame)
   (player-on-track-time  time-frame)
   (message-id            sound-id)
   (finish-sound-id       sound-id)
   (show-stats?           symbol)
   )
  (:methods
    (race-manager-method-14 () none)
    (race-manager-method-15 () none)
    (race-manager-method-16 () none)
    (race-manager-method-17 () none)
    (race-manager-method-18 () none)
    (race-manager-method-19 () none)
    (race-manager-method-20 () none)
    (race-manager-method-21 () none)
    (race-manager-method-22 () none)
    (race-manager-method-23 () none)
    (race-manager-method-24 () none)
    (race-manager-method-25 () none)
    (race-manager-method-26 () none)
    (race-manager-method-27 () none)
    )
  )


(deftype hud-race-timer (hud)
  ()
  )


(deftype hud-race-lap-counter (hud)
  ()
  )


(deftype hud-race-turbo-counter (hud)
  ()
  )


(deftype hud-race-position (hud)
  ()
  )


(define *race-manager* (the-as (pointer race-manager) #f))
